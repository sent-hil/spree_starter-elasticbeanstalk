# To be used in production. Assumes the following ENV variables are set already.
#
# Environment required variables for 'web' and 'worker'
#   REDIS_URL: redis://redis:6379/0 # example
#   DATABSE_URL: postgres://username:password@host:port/database_name # example
#   SECRET_KEY_BASE: <secret> # example
#   BUNDLE_WITHOUT: development:test # example

version: '3.7'
services:
  nginx-proxy:
    image: 'nginx'
    volumes:
      - '/var/log/nginx:/var/log/nginx'
      - './nginx.conf:/etc/nginx/nginx.conf'
      - 'rails_assets:/var/www/public'
    ports:
      - '80:80'
    depends_on:
      - web
    restart: on-failure
  web:
    build:
      context: .
      dockerfile: Dockerfile.production
    command: bash -c "rm -rf tmp/pids/server.pid && bundle exec rails s -b 0.0.0.0 -p 4000"
    environment:
      - 'DATABASE_URL=${DATABASE_URL}'
      - 'REDIS_URL=${REDIS_URL}'
      - 'SECRET_KEY_BASE=${SECRET_KEY_BASE}'
      - 'BUNDLE_WITHOUT=${BUNDLE_WITHOUT}'
    expose:
      - '4000'
    volumes:
      - 'bundle_cache:/bundle'
      - 'rails_assets:/app/public'
      - .env:/app/.env
    restart: on-failure
  worker:
    build:
      context: .
      dockerfile: Dockerfile.production
    command: bundle exec sidekiq -C config/sidekiq.yml
    environment:
      - 'DATABASE_URL=${DATABASE_URL}'
      - 'REDIS_URL=${REDIS_URL}'
      - 'SECRET_KEY_BASE=${SECRET_KEY_BASE}'
      - 'BUNDLE_WITHOUT=${BUNDLE_WITHOUT}'
    volumes:
      - 'bundle_cache:/bundle'
      - 'rails_assets:/app/public'
      - .env:/app/.env
    restart: on-failure

volumes:
  bundle_cache:
  # Create a volume for storing rails compiled assets to be used by web and nginx-proxy.
  rails_assets:
